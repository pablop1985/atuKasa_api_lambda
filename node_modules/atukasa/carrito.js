class Carrito {

	constructor(cliente, aparato, idioma, DB) {
		this.cliente = cliente;
		this.aparato = aparato;
		this.idioma = idioma;
		this.DB = DB;
	}

	resultadobase = {
		estado: 0,
		texto: '',
		codigo: 100,
		datos: []
	};

	anadir_multiple = async function(array_productos) {
		let resultado = Object.assign({}, this.resultadobase);

		resultado.estado = 1;
		resultado.componente = 'carrito';
		resultado.funcion = 'anadir_multiple';
		resultado.codigo = 103;

		console.log('Funcion anadir multiple al carrito');

		array_productos.forEach(async item => {
			if (resultado.estado == 1) {
				await this.anadir(item.producto, item.unidades, resultado.funcion).then(async(res) => {
					if (res.estado == 0) {
						resultado.estado = 0;
						resultado.texto = res.texto;
					}
				});
			}
		});

		if (resultado.estado == 1) {
			resultado = await this.listar(resultado.funcion);
			resultado.sqs = {
				componente: 'carrito',
				function: 'anadirMultiple',
				cliente: this.cliente,
				aparato: this.aparato,
				productos: array_productos
			};
		} else {
			resultado.datos = [];
		}

		return resultado;
	}

	anadir = async function(producto, unidades, funcion = '') {
		let resultado = Object.assign({}, this.resultadobase);

		resultado.componente = 'carrito';
		resultado.funcion = 'anadir';
		resultado.codigo = 102;

		console.log('Funcion anadir al carrito - ' + funcion + ' | ' + producto + ' / ' + unidades);

		let consulta = {
			text: "INSERT INTO carrito(cliente, aparato, producto, unidades) VALUES($1, $2, $3, $4) ON CONFLICT(cliente, producto, aparato) DO UPDATE SET unidades = carrito.unidades+$4",
			values: [this.cliente, this.aparato, producto, unidades]
		}

		await this.DB.query(consulta).then((res) => {
			if (funcion == '') {
				resultado = this.listar('anadir');
			} else {
				resultado.estado = 1;
				resultado.datos = [];
			}
			resultado.sqs = {
				componente: 'carrito',
				function: 'anadir',
				cliente: this.cliente,
				aparato: this.aparato,
				producto: producto,
				unidades: unidades
			};

		}).catch((err) => {
			resultado.texto = "ERROR CARRITO ANADIR: " + err;
			resultado.estado = 0;
			resultado.datos = [];
		});

		return resultado;
	}

	editar = async function(id, stock) {
		let resultado = Object.assign({}, this.resultadobase);

		resultado.componente = 'carrito';
		resultado.funcion = 'editar';
		resultado.codigo = 104;

		console.log('Funcion editar carrito - ' + id + ' | ' + stock);

		let consulta = {
			text: "UPDATE carrito SET unidades = $4 WHERE cliente = $1 AND aparato = $2 AND id = $3",
			values: [this.cliente, this.aparato, id, stock]
		}

		await this.DB.query(consulta).then((res) => {
			resultado = this.listar(resultado.funcion);
			resultado.sqs = {
				componente: 'carrito',
				function: 'editar',
				cliente: this.cliente,
				aparato: this.aparato,
				id: id,
				stock: stock
			};
		}).catch((err) => {
			resultado.texto = "ERROR CARRITO MODIFICAR: " + err;
			resultado.estado = 0;
			resultado.datos = [];
		});

		return resultado;
	}

	borrar = async function(id) {
		let resultado = Object.assign({}, this.resultadobase);

		resultado.componente = 'carrito';
		resultado.funcion = 'borrar';
		resultado.codigo = 105;

		console.log('Funcion borrar del carrito - ' + id);

		let consulta = {
			text: "DELETE FROM carrito WHERE cliente = $1 AND aparato = $2 and id = $3",
			values: [this.cliente, this.aparato, id]
		}

		await this.DB.query(consulta).then((res) => {
			resultado = this.listar(resultado.funcion);
			resultado.sqs = {
				componente: 'carrito',
				function: 'borrar',
				cliente: this.cliente,
				aparato: this.aparato,
				id: id
			};
		}).catch((err) => {
			resultado.texto = "ERROR CARRITO BORRAR: " + err;
			resultado.estado = 0;
			resultado.datos = [];
		});

		return resultado;
	}

	descartar = async function() {
		let resultado = Object.assign({}, this.resultadobase);

		resultado.componente = 'carrito';
		resultado.funcion = 'descartar';
		resultado.codigo = 106;
		console.log('Funcion descartar carrito');

		let consulta = {
			text: "DELETE FROM carrito WHERE cliente = $1 AND aparato = $2",
			values: [this.cliente, this.aparato]
		}

		await this.DB.query(consulta).then((res) => {
			resultado.estado = 1;
			resultado.texto = "CARRITO DESCARTADO";
			resultado.datos = [];
			resultado.sqs = {
				componente: 'carrito',
				function: 'descartar',
				cliente: this.cliente,
				aparato: this.aparato
			};
		}).catch((err) => {
			resultado.texto = "ERROR CARRITO DESCARTAR: " + err;
			resultado.estado = 0;
		});


		return resultado;
	}

	listar = async function(funcion = '') {
		let resultado = Object.assign({}, this.resultadobase);

		resultado.componente = 'carrito';
		resultado.funcion = funcion != '' ? funcion : 'listar';
		resultado.codigo = 101;
		console.log('Funcion listar carrito - ' + funcion);

		let consulta = {
			text: "SELECT * FROM vista_productos_carrito WHERE id_cliente = $1 AND id_aparato = $2 AND id_idioma = $3",
			values: [this.cliente, this.aparato, this.idioma]
		}

		await this.DB.query(consulta).then((res) => {
			if (res.rows.length > 0) {
				resultado.datos = res.rows;
			} else {
				resultado.datos = [];
			}
			resultado.estado = 1;
			resultado.texto = "CARRITO LISTADO"
		}).catch((err) => {
			resultado.texto = "ERROR CARRITO LISTAR: " + err;
			resultado.estado = 0;
			resultado.datos = [];
		});

		return resultado;
	}
}

module.exports = Carrito;